/**
 * AVM
 * This is api for AVM (automated valuation machine)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@enbisys.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AdditionalFeatures from './model/AdditionalFeatures';
import BuiltForm from './model/BuiltForm';
import EnergyEfficiency from './model/EnergyEfficiency';
import EnergyRating from './model/EnergyRating';
import FloorLevel from './model/FloorLevel';
import LeaseholdOrFreehold from './model/LeaseholdOrFreehold';
import NewOrResale from './model/NewOrResale';
import Problem from './model/Problem';
import PropertyFeatures from './model/PropertyFeatures';
import PropertyType from './model/PropertyType';
import RequiredFeatures from './model/RequiredFeatures';
import RoofInsulation from './model/RoofInsulation';
import RoofType from './model/RoofType';
import Valuation from './model/Valuation';
import ValuationPriceDistribution from './model/ValuationPriceDistribution';
import WallInsulation from './model/WallInsulation';
import WallType from './model/WallType';
import WindowGlazingType from './model/WindowGlazingType';
import DefaultApi from './api/DefaultApi';


/**
* This_is_api_for_AVM__automated_valuation_machine.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Avm = require('index'); // See note below*.
* var xxxSvc = new Avm.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Avm.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Avm.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Avm.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AdditionalFeatures model constructor.
     * @property {module:model/AdditionalFeatures}
     */
    AdditionalFeatures,

    /**
     * The BuiltForm model constructor.
     * @property {module:model/BuiltForm}
     */
    BuiltForm,

    /**
     * The EnergyEfficiency model constructor.
     * @property {module:model/EnergyEfficiency}
     */
    EnergyEfficiency,

    /**
     * The EnergyRating model constructor.
     * @property {module:model/EnergyRating}
     */
    EnergyRating,

    /**
     * The FloorLevel model constructor.
     * @property {module:model/FloorLevel}
     */
    FloorLevel,

    /**
     * The LeaseholdOrFreehold model constructor.
     * @property {module:model/LeaseholdOrFreehold}
     */
    LeaseholdOrFreehold,

    /**
     * The NewOrResale model constructor.
     * @property {module:model/NewOrResale}
     */
    NewOrResale,

    /**
     * The Problem model constructor.
     * @property {module:model/Problem}
     */
    Problem,

    /**
     * The PropertyFeatures model constructor.
     * @property {module:model/PropertyFeatures}
     */
    PropertyFeatures,

    /**
     * The PropertyType model constructor.
     * @property {module:model/PropertyType}
     */
    PropertyType,

    /**
     * The RequiredFeatures model constructor.
     * @property {module:model/RequiredFeatures}
     */
    RequiredFeatures,

    /**
     * The RoofInsulation model constructor.
     * @property {module:model/RoofInsulation}
     */
    RoofInsulation,

    /**
     * The RoofType model constructor.
     * @property {module:model/RoofType}
     */
    RoofType,

    /**
     * The Valuation model constructor.
     * @property {module:model/Valuation}
     */
    Valuation,

    /**
     * The ValuationPriceDistribution model constructor.
     * @property {module:model/ValuationPriceDistribution}
     */
    ValuationPriceDistribution,

    /**
     * The WallInsulation model constructor.
     * @property {module:model/WallInsulation}
     */
    WallInsulation,

    /**
     * The WallType model constructor.
     * @property {module:model/WallType}
     */
    WallType,

    /**
     * The WindowGlazingType model constructor.
     * @property {module:model/WindowGlazingType}
     */
    WindowGlazingType,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
