/**
 * AVM
 * This is api for AVM (automated valuation machine)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@enbisys.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AdditionalFeatures from '../model/AdditionalFeatures';
import Problem from '../model/Problem';
import PropertyFeatures from '../model/PropertyFeatures';
import RequiredFeatures from '../model/RequiredFeatures';
import Valuation from '../model/Valuation';

/**
* Default service.
* @module api/DefaultApi
* @version 1.0.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getFastValuation operation.
     * @callback module:api/DefaultApi~getFastValuationCallback
     * @param {String} error Error message, if any.
     * @param {Number} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get only property price valuation without confidence estimation
     * @param {module:model/PropertyFeatures} propertyFeatures Property features that describe property
     * @param {module:api/DefaultApi~getFastValuationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Number}
     */
    getFastValuation(propertyFeatures, callback) {
      let postBody = propertyFeatures;
      // verify the required parameter 'propertyFeatures' is set
      if (propertyFeatures === undefined || propertyFeatures === null) {
        throw new Error("Missing the required parameter 'propertyFeatures' when calling getFastValuation");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json', 'application/problem+json'];
      let returnType = 'Number';
      return this.apiClient.callApi(
        '/properties/getFastValuation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getValuation operation.
     * @callback module:api/DefaultApi~getValuationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Valuation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get property price valuation with confidence estimation
     * @param {module:model/PropertyFeatures} propertyFeatures Property features to valuate
     * @param {module:api/DefaultApi~getValuationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Valuation}
     */
    getValuation(propertyFeatures, callback) {
      let postBody = propertyFeatures;
      // verify the required parameter 'propertyFeatures' is set
      if (propertyFeatures === undefined || propertyFeatures === null) {
        throw new Error("Missing the required parameter 'propertyFeatures' when calling getValuation");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/problem+json'];
      let returnType = Valuation;
      return this.apiClient.callApi(
        '/properties/getValuation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
